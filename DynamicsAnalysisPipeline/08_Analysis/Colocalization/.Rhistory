print("Running script ReformattedColocalization.R")
source("ReformattedColocalization.R", local = T)
}, error = function(e) {print("Error with ReformattedColocalization.R")})
#Combines analysis table with colocalization table
tryCatch({
setwd(COLOCALIZATION_SCRIPTS)
print("Running script ColocalizationTable.R")
source("ColocalizationTable.R", local = T)
}, error = function(e) {print("Error with ColocalizationTable.R")})
} else{
if(exists("ColocalizationImgs")) {} else {
setwd(COLOCALIZATION_DIRECTORY)
filename = "GrandColocalizationComparison"
ColocalizationImgs <-
data.table::fread(paste(filename, ".csv.gz", sep = ""), integer64="character")
}
}
ColocalizationImgs <-
ColocalizationImgs %>%
mutate(
GROUP_ID = paste(GROUP, LIGAND_DENSITY_CAT),
PROTEIN = factor(PROTEIN, levels = PROTEIN_ORDER),
GROUP = factor(GROUP, levels = PROTEIN_ORDER)
) %>%
filter(
IMAGE != ""
)
#Plot colors
ALL_PROTEIN2 = unique(ColocalizationInput$PROTEIN2)
ALL_PROTEIN2 = factor(ALL_PROTEIN2, levels = PROTEIN_ORDER)
COLOR = brewer.pal(n = NROW(ALL_PROTEIN2), name = "Set2")
ColocalizationGroupsFx <- function(GroupX) {
tryCatch({
#Filter data
{
GROUP_IDS <-
ColocalizationInput %>%
filter(
GROUPNUMBER == GroupX
)
#Variables
lp.GROUP = unique(GROUP_IDS$GROUP)
lp.LIGAND_DENSITY_CAT = unique(GROUP_IDS$LIGAND_DENSITY_CAT)
lp.PROTEIN1 = unique(GROUP_IDS$PROTEIN1)
lp.PROTEIN2 = unique(GROUP_IDS$PROTEIN2)
GROUP_IDS <- unique(GROUP_IDS$GROUP_ID)
GroupData <-
ColocalizationImgs %>%
filter(
GROUP_ID %in% GROUP_IDS
) %>%
mutate(
IMAGENUMBER = group_indices(., LIGAND_DENSITY_CAT, GROUP, IMAGE)
)
}
#Folder
{
FOLDER = paste(lp.PROTEIN1, "_", lp.PROTEIN2," ", lp.LIGAND_DENSITY_CAT, sep ="")
FOLDER = file.path(COLOCALIZATION_DIRECTORY, FOLDER)
dir.create(FOLDER, showWarnings = FALSE)
setwd(FOLDER)
}
PROTEINS <- unique(GroupData$PROTEIN)
ProteinFx <- function(ProteinX) {
tryCatch({
#Variables
lp.PROTEIN = PROTEINS[ProteinX]
lp.OTHERPROTEIN = which(PROTEINS != lp.PROTEIN)
lp.OTHERPROTEIN = PROTEINS[lp.OTHERPROTEIN]
PROTEIN_FILL = COLOR[which(ALL_PROTEIN2==lp.PROTEIN2)]
#Filter protein data
ProteinData <-
GroupData %>%
filter(
PROTEIN %in% lp.PROTEIN
)
#Fluorophore name
lp.FLUOROPHORE <-
InputDataImageSummary %>%
filter(
GROUP %in% lp.GROUP,
PROTEIN %in% lp.PROTEIN
)
lp.FLUOROPHORE = lp.FLUOROPHORE$FLUOROPHORE[1]
lp.PROTEIN_FLUOROPHORE = paste(lp.PROTEIN, lp.FLUOROPHORE, sep = "-")
#Variables
lp.LIFETIME_THRESHOLD = ProteinData$LIFETIME_THRESHOLD[1]
lp.MAX_INTENSITY_THRESHOLD = ProteinData$MAX_INTENSITY_THRESHOLD[1]
#Edit data labels
ProteinData <-
ProteinData %>%
mutate(
LIFETIME_CAT =
ifelse(
LIFETIME_CAT == 0,
paste("<", lp.LIFETIME_THRESHOLD, "s", sep =""),
paste("≥", lp.LIFETIME_THRESHOLD, "s", sep ="")
),
MAX_INTENSITY_CAT =
ifelse(
MAX_INTENSITY_CAT == 0,
paste("<", lp.MAX_INTENSITY_THRESHOLD, sep =""),
paste("≥", lp.MAX_INTENSITY_THRESHOLD, sep ="")
)
)
#Percent colocalization by lifetime
#Table
setwd(COLOCALIZATION_SCRIPTS)
print("Running script Mean_Colocalization Cat_Lifetime.R")
source("Mean_Colocalization Cat_Lifetime.R", local = T)
#Violin plot
setwd(COLOCALIZATION_SCRIPTS)
print("Running script Mean_Colocalization Cat_Lifetime Violin.R")
source("Mean_Colocalization Cat_Lifetime Violin.R", local = T)
#Violin plot by replicate
setwd(COLOCALIZATION_SCRIPTS)
print("Running script Mean_Colocalization Cat_Lifetime By_Replicate Violin.R")
source("Mean_Colocalization Cat_Lifetime By_Replicate Violin.R", local = T)
#Percent colocalization by lifetime
#Table
setwd(COLOCALIZATION_SCRIPTS)
print("Running script Mean_Colocalization Cat_MaxIntCat.R")
source("Mean_Colocalization Cat_MaxIntCat.R", local = T)
#Plot
setwd(COLOCALIZATION_SCRIPTS)
print("Running script Mean_Colocalization Cat_MaxIntCat Violin.R")
source("Mean_Colocalization Cat_MaxIntCat Violin.R", local = T)
#Max Intensity
setwd(COLOCALIZATION_SCRIPTS)
print("Running script MaxInt Density.R")
source("MaxInt Density.R", local = T)
#Max Intensity by Replicate
setwd(COLOCALIZATION_SCRIPTS)
print("Running script MaxInt By_Replictate Density.R")
source("MaxInt By_Replictate Density.R", local = T)
}, error = function(e) {print(paste("   ERROR with ProteinFx GroupX =", GroupX))})
}
nPROTEINS <- 1:NROW(PROTEINS)
mclapply(nPROTEINS, ProteinFx)
}, error = function(e) {print(paste("   ERROR with ColocalizationGroupsFx GroupX =", GroupX))})
}
nGROUPS = unique(ColocalizationInput$GROUPNUMBER)
mclapply(nGROUPS, ColocalizationGroupsFx)
#Wait time
#Plot histogram
setwd(COLOCALIZATION_SCRIPTS)
print("Running script WaitTime Histogram.R")
source("WaitTime Histogram.R", local = T)
GENERATE_NEW_TABLE = F
#Change folder
COLOCALIZATION_DIRECTORY = file.path(ANALYSIS_DIRECTORY, "Colocalization Data")
dir.create(COLOCALIZATION_DIRECTORY, showWarnings = FALSE)
setwd(COLOCALIZATION_DIRECTORY)
#Generate input table
{
#Get list of reference files
ColocalizationInputRef <-
InputDataImageSummary %>%
group_by(IMAGE) %>%
mutate(
nPROTEINS = NROW(PROTEIN),
MAX_INTENSITY_THRESHOLD_1 = MAX_INTENSITY_THRESHOLD
) %>%
filter(
nPROTEINS != 1,
PROTEIN == REFERENCE_PROTEIN
)
#Rename protein column
names(ColocalizationInputRef)[names(ColocalizationInputRef)=="PROTEIN"] <- "PROTEIN1"
#Get colocalization protein
ColocalizationInput <-
InputDataImageSummary %>%
group_by(IMAGE) %>%
mutate(
nPROTEINS = NROW(PROTEIN),
MAX_INTENSITY_THRESHOLD_2 = MAX_INTENSITY_THRESHOLD
) %>%
filter(
nPROTEINS != 1,
PROTEIN != REFERENCE_PROTEIN
) %>%
select(
IMAGE,
PROTEIN,
MAX_INTENSITY_THRESHOLD_2
)
#Rename protein column
names(ColocalizationInput)[names(ColocalizationInput)=="PROTEIN"] <- "PROTEIN2"
ColocalizationInput = merge(ColocalizationInputRef, ColocalizationInput, by = "IMAGE")
#Remove colocalization file
#Prepare subfolder name
ColocalizationInput <- ColocalizationInput %>% mutate(COLOCALIZATION = paste(PROTEIN2, PROTEIN1, sep = "_")) #Flipped parent/child
remove(ColocalizationInputRef)
ColocalizationInput <-
ColocalizationInput %>%
select(
COLOCALIZATION,
COHORT,
GROUP,
IMAGE,
CELLS,
LIGAND_DENSITY,
LIGAND_DENSITY_CAT,
PROTEIN1,
MAX_INTENSITY_THRESHOLD_1,
PROTEIN2,
MAX_INTENSITY_THRESHOLD_2
) %>%
ungroup() %>%
mutate(
GROUPNUMBER = group_indices(., GROUP, LIGAND_DENSITY_CAT),
GROUP_ID = paste(GROUP, LIGAND_DENSITY_CAT)
)
#Save
filename = "InputColocalization"
data.table::fwrite(ColocalizationInput, paste(filename, ".csv.gz", sep = ""), row.names = F, na = "")
}
#Import or make colocalization table
if(GENERATE_NEW_TABLE == T) {
#Reformats colocalziation so that R can read it
tryCatch({
setwd(COLOCALIZATION_SCRIPTS)
print("Running script ReformattedColocalization.R")
source("ReformattedColocalization.R", local = T)
}, error = function(e) {print("Error with ReformattedColocalization.R")})
#Combines analysis table with colocalization table
tryCatch({
setwd(COLOCALIZATION_SCRIPTS)
print("Running script ColocalizationTable.R")
source("ColocalizationTable.R", local = T)
}, error = function(e) {print("Error with ColocalizationTable.R")})
} else{
if(exists("ColocalizationImgs")) {} else {
setwd(COLOCALIZATION_DIRECTORY)
filename = "GrandColocalizationComparison"
ColocalizationImgs <-
data.table::fread(paste(filename, ".csv.gz", sep = ""), integer64="character")
}
}
ColocalizationImgs <-
ColocalizationImgs %>%
mutate(
GROUP_ID = paste(GROUP, LIGAND_DENSITY_CAT),
PROTEIN = factor(PROTEIN, levels = PROTEIN_ORDER),
GROUP = factor(GROUP, levels = PROTEIN_ORDER)
) %>%
filter(
IMAGE != ""
)
#Plot colors
ALL_PROTEIN2 = unique(ColocalizationInput$PROTEIN2)
ALL_PROTEIN2 = factor(ALL_PROTEIN2, levels = PROTEIN_ORDER)
COLOR = brewer.pal(n = NROW(ALL_PROTEIN2), name = "Set2")
ColocalizationGroupsFx <- function(GroupX) {
tryCatch({
#Filter data
{
GROUP_IDS <-
ColocalizationInput %>%
filter(
GROUPNUMBER == GroupX
)
#Variables
lp.GROUP = unique(GROUP_IDS$GROUP)
lp.LIGAND_DENSITY_CAT = unique(GROUP_IDS$LIGAND_DENSITY_CAT)
lp.PROTEIN1 = unique(GROUP_IDS$PROTEIN1)
lp.PROTEIN2 = unique(GROUP_IDS$PROTEIN2)
GROUP_IDS <- unique(GROUP_IDS$GROUP_ID)
GroupData <-
ColocalizationImgs %>%
filter(
GROUP_ID %in% GROUP_IDS
) %>%
mutate(
IMAGENUMBER = group_indices(., LIGAND_DENSITY_CAT, GROUP, IMAGE)
)
}
#Folder
{
FOLDER = paste(lp.PROTEIN1, "_", lp.PROTEIN2," ", lp.LIGAND_DENSITY_CAT, sep ="")
FOLDER = file.path(COLOCALIZATION_DIRECTORY, FOLDER)
dir.create(FOLDER, showWarnings = FALSE)
setwd(FOLDER)
}
PROTEINS <- unique(GroupData$PROTEIN)
ProteinFx <- function(ProteinX) {
tryCatch({
#Variables
lp.PROTEIN = PROTEINS[ProteinX]
lp.OTHERPROTEIN = which(PROTEINS != lp.PROTEIN)
lp.OTHERPROTEIN = PROTEINS[lp.OTHERPROTEIN]
PROTEIN_FILL = COLOR[which(ALL_PROTEIN2==lp.PROTEIN2)]
#Filter protein data
ProteinData <-
GroupData %>%
filter(
PROTEIN %in% lp.PROTEIN
)
#Fluorophore name
lp.FLUOROPHORE <-
InputDataImageSummary %>%
filter(
GROUP %in% lp.GROUP,
PROTEIN %in% lp.PROTEIN
)
lp.FLUOROPHORE = lp.FLUOROPHORE$FLUOROPHORE[1]
lp.PROTEIN_FLUOROPHORE = paste(lp.PROTEIN, lp.FLUOROPHORE, sep = "-")
#Variables
lp.LIFETIME_THRESHOLD = ProteinData$LIFETIME_THRESHOLD[1]
lp.MAX_INTENSITY_THRESHOLD = ProteinData$MAX_INTENSITY_THRESHOLD[1]
#Edit data labels
ProteinData <-
ProteinData %>%
mutate(
LIFETIME_CAT =
ifelse(
LIFETIME_CAT == 0,
paste("<", lp.LIFETIME_THRESHOLD, "s", sep =""),
paste("≥", lp.LIFETIME_THRESHOLD, "s", sep ="")
),
MAX_INTENSITY_CAT =
ifelse(
MAX_INTENSITY_CAT == 0,
paste("<", lp.MAX_INTENSITY_THRESHOLD, sep =""),
paste("≥", lp.MAX_INTENSITY_THRESHOLD, sep ="")
)
)
#Percent colocalization by lifetime
#Table
setwd(COLOCALIZATION_SCRIPTS)
print("Running script Mean_Colocalization Cat_Lifetime.R")
source("Mean_Colocalization Cat_Lifetime.R", local = T)
#Violin plot
setwd(COLOCALIZATION_SCRIPTS)
print("Running script Mean_Colocalization Cat_Lifetime Violin.R")
source("Mean_Colocalization Cat_Lifetime Violin.R", local = T)
#Violin plot by replicate
setwd(COLOCALIZATION_SCRIPTS)
print("Running script Mean_Colocalization Cat_Lifetime By_Replicate Violin.R")
source("Mean_Colocalization Cat_Lifetime By_Replicate Violin.R", local = T)
#Percent colocalization by lifetime
#Table
setwd(COLOCALIZATION_SCRIPTS)
print("Running script Mean_Colocalization Cat_MaxIntCat.R")
source("Mean_Colocalization Cat_MaxIntCat.R", local = T)
#Plot
setwd(COLOCALIZATION_SCRIPTS)
print("Running script Mean_Colocalization Cat_MaxIntCat Violin.R")
source("Mean_Colocalization Cat_MaxIntCat Violin.R", local = T)
#Max Intensity
setwd(COLOCALIZATION_SCRIPTS)
print("Running script MaxInt Density.R")
source("MaxInt Density.R", local = T)
#Max Intensity by Replicate
setwd(COLOCALIZATION_SCRIPTS)
print("Running script MaxInt By_Replictate Density.R")
source("MaxInt By_Replictate Density.R", local = T)
}, error = function(e) {print(paste("   ERROR with ProteinFx GroupX =", GroupX))})
}
nPROTEINS <- 1:NROW(PROTEINS)
lapply(nPROTEINS, ProteinFx)
}, error = function(e) {print(paste("   ERROR with ColocalizationGroupsFx GroupX =", GroupX))})
}
nGROUPS = unique(ColocalizationInput$GROUPNUMBER)
mclapply(nGROUPS, ColocalizationGroupsFx)
#Wait time
#Plot histogram
setwd(COLOCALIZATION_SCRIPTS)
print("Running script WaitTime Histogram.R")
source("WaitTime Histogram.R", local = T)
VideoSetup.R
#Image settings
VIDEO_IMAGE = "201900503  201900503 cl028 MyD88gfp  il1 JF646 1 1000 4.4nM.n003"
VIDEO_CELL = 4
VIDEO_PROTEIN = "MyD88"
#Separate frames into individual TIFFs
#Pad with 0's to make it 4 characters wide (e.g., Frame 1 is 0001.tif)
#Save inside a subfolder called "Stack"
#From ImageJ
IMG_MIN_INTENSITY = 9
IMG_MAX_INTENSITY = 64
#Frame rate for
VIDEO_FRAME_RATE = 15
file.path(ANALYSIS_DIRECTORY, "MyD88", VIDEO_IMAGE, "Cell_4")
print("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt")
print("")
print("Permission is hereby granted, free of charge, to any person obtaining a copy of")
print("this software and associated documentation files (the "Software"), to deal in")
print("the Software without restriction, including without limitation the rights to")
print("use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of")
print("the Software, and to permit persons to whom the Software is furnished to do so,")
print("subject to the following conditions:")
print("")
print("The above copyright notice and this permission notice shall be included in all")
print("copies or substantial portions of the Software.")
print("")
print("THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR")
print("IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS")
print("FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR")
print("COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER")
print("IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN")
print("CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
print("THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR")
print("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt")
print("")
print("Permission is hereby granted, free of charge, to any person obtaining a copy of")
print("this software and associated documentation files (the "Software"), to deal in")
print("the Software without restriction, including without limitation the rights to")
print("use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of")
print("the Software, and to permit persons to whom the Software is furnished to do so,")
print("subject to the following conditions:")
print("")
print("The above copyright notice and this permission notice shall be included in all")
print("copies or substantial portions of the Software.")
print("")
print("THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR")
print("IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS")
print("FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR")
print("COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER")
print("IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN")
print("CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
print("a", "b")
print()
print("A\nb")
cat("a\nb")
print(Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.)
print("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED -AS IS-, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED -AS IS-, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software with")
cat("Copyright 2020 (c) ")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre,")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis soft")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, ")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any pe")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the -Software-), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED -AS IS-, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the 'Software'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED -AS IS-, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre, Kabir Husain, Alexander Schmidt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the 'Software'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
cat("Please, cite: Deliz-Aguirre, Cao, et al. (2020) IRAK4 controls MyD88 oligomer size to regulate Myddosome assembly")
cite()
cite(parallel)
cite("parallel")
cite("ggplot")
ggplot
cite(ggplot)
cite(R0)
cite("R0")
cite(bib)
citation(ggplot)
citation("ggplot")
citation("ggplot2")
cat("To cite this work in publications, please use:\n
Deliz-Aguirre, Cao, et al. (2020) IRAK4 controls MyD88 oligomer size to regulate Myddosome assembly")
cat("To cite this work in publications, please use:
Deliz-Aguirre, Cao, et al. (2020) IRAK4 controls MyD88 oligomer size to regulate Myddosome assembly")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre\n
\n
Permission is hereby granted, free of charge, to any person obtaining a copy of\n
this software and associated documentation files (the 'Software'), to deal in\n
the Software without restriction, including without limitation the rights to\n
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n
the Software, and to permit persons to whom the Software is furnished to do so,\n
subject to the following conditions:\n
\n
The above copyright notice and this permission notice shall be included in all\n
copies or substantial portions of the Software.\n
\n
THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
cat("To cite this work in publications, please use:
Deliz-Aguirre, Cao, et al. (2020) IRAK4 controls MyD88 oligomer size to regulate Myddosome assembly")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre
Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the 'Software'), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
cat("To cite this work in publications, please use:
Deliz-Aguirre, Cao, et al. (2020) IRAK4 controls MyD88 oligomer size to regulate Myddosome assembly")
cat("Copyright 2020 (c) Rafael Deliz-Aguirre
Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the 'Software'), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.")
